user signs up
 - requires a user class
   - this will be made up of sqlalchemy orm class
   - the class will include:
     - id (generated by sqlalchemy)
     - username (generated by UsernameService) - can be used for signing in
     - passcode (generated by PasscodeService) - used for signing in
     - mobile (user provides and can be used for signing in)
     - email (user provides)
     - ip address (flask provided)
     - created date (generated by sqlalchemy datetime)
     - updated date (can be blank until entry altered)

     - plus additional methods which are not predetermined

user builds profile
 - requires a profile class
   - this will be made of sqlalchemy orm class
   - the class will include:
     - id
     - user_id
     - game_id (provided from game table)
     - country
     - postcode

ProfileBuilderService
 - requires API for each game
   - retrieve:
     - account level
     - most played character and mastery
     - rank (if possible)
     - match history (recent)

LadderService
 - requires user class and it's own class
   - requires whichever metric is used for the specific game for ranking
   - requires the users location
   - ladders will be per region i.e (postcode, county, city, country)
   - access to the database
